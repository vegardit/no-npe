class net/bytebuddy/description/type/TypeDescription$ForLoadedType

getName
 (Ljava/lang/Class<*>;)Ljava/lang/String;
 (Ljava/lang/Class<*>;)Ljava/lang/String;
of
 (Ljava/lang/Class<*>;)Lnet/bytebuddy/description/type/TypeDescription;
 (Ljava/lang/Class<*>;)Lnet/bytebuddy/description/type/TypeDescription;

<init>
 (Ljava/lang/Class<*>;)V
 (Ljava/lang/Class<*>;)V
asGenericType
 ()Lnet/bytebuddy/description/type/TypeDescription$Generic;
 ()L1net/bytebuddy/description/type/TypeDescription$Generic; # @Inherited(net.bytebuddy.description.type.TypeDescription$AbstractBase)
getCanonicalName
 ()Ljava/lang/String;
 ()L0java/lang/String; # @Inherited(net.bytebuddy.description.type.TypeDescription)
getClassFileVersion
 ()Lnet/bytebuddy/ClassFileVersion;
 ()L0net/bytebuddy/ClassFileVersion; # @Inherited(net.bytebuddy.description.type.TypeDescription$AbstractBase)
getComponentType
 ()Lnet/bytebuddy/description/type/TypeDescription;
 ()L0net/bytebuddy/description/type/TypeDescription; # @Inherited(net.bytebuddy.description.type.TypeDescription)
getDeclaredAnnotations
 ()Lnet/bytebuddy/description/annotation/AnnotationList;
 ()Lnet/bytebuddy/description/annotation/AnnotationList;
getDeclaredFields
 ()Lnet/bytebuddy/description/field/FieldList<Lnet/bytebuddy/description/field/FieldDescription$InDefinedShape;>;
 ()Lnet/bytebuddy/description/field/FieldList<Lnet/bytebuddy/description/field/FieldDescription$InDefinedShape;>;
getDeclaredMethods
 ()Lnet/bytebuddy/description/method/MethodList<Lnet/bytebuddy/description/method/MethodDescription$InDefinedShape;>;
 ()Lnet/bytebuddy/description/method/MethodList<Lnet/bytebuddy/description/method/MethodDescription$InDefinedShape;>;
getDeclaredTypes
 ()Lnet/bytebuddy/description/type/TypeList;
 ()L1net/bytebuddy/description/type/TypeList;
getDeclaringType
 ()Lnet/bytebuddy/description/type/TypeDescription;
 ()L0net/bytebuddy/description/type/TypeDescription; # @Inherited(net.bytebuddy.description.type.TypeDescription)
getDescriptor
 ()Ljava/lang/String;
 ()L1java/lang/String;
getEnclosingMethod
 ()Lnet/bytebuddy/description/method/MethodDescription$InDefinedShape;
 ()L0net/bytebuddy/description/method/MethodDescription$InDefinedShape; # @Inherited(net.bytebuddy.description.type.TypeDescription)
getEnclosingType
 ()Lnet/bytebuddy/description/type/TypeDescription;
 ()L0net/bytebuddy/description/type/TypeDescription; # @Inherited(net.bytebuddy.description.type.TypeDescription)
getInterfaces
 ()Lnet/bytebuddy/description/type/TypeList$Generic;
 ()L1net/bytebuddy/description/type/TypeList$Generic;
getName
 ()Ljava/lang/String;
 ()Ljava/lang/String;
getNestHost
 ()Lnet/bytebuddy/description/type/TypeDescription;
 ()Lnet/bytebuddy/description/type/TypeDescription;
getNestMembers
 ()Lnet/bytebuddy/description/type/TypeList;
 ()Lnet/bytebuddy/description/type/TypeList;
getPackage
 ()Lnet/bytebuddy/description/type/PackageDescription;
 ()L0net/bytebuddy/description/type/PackageDescription; # @Inherited(net.bytebuddy.description.type.TypeDescription)
getPermittedSubtypes
 ()Lnet/bytebuddy/description/type/TypeList;
 ()L1net/bytebuddy/description/type/TypeList;
getRecordComponents
 ()Lnet/bytebuddy/description/type/RecordComponentList<Lnet/bytebuddy/description/type/RecordComponentDescription$InDefinedShape;>;
 ()L1net/bytebuddy/description/type/RecordComponentList<Lnet/bytebuddy/description/type/RecordComponentDescription$InDefinedShape;>;
getSimpleName
 ()Ljava/lang/String;
 ()Ljava/lang/String;
getStackSize
 ()Lnet/bytebuddy/implementation/bytecode/StackSize;
 ()Lnet/bytebuddy/implementation/bytecode/StackSize;
getSuperClass
 ()Lnet/bytebuddy/description/type/TypeDescription$Generic;
 ()L0net/bytebuddy/description/type/TypeDescription$Generic; # @Inherited(net.bytebuddy.description.type.TypeDefinition)
getTypeVariables
 ()Lnet/bytebuddy/description/type/TypeList$Generic;
 ()Lnet/bytebuddy/description/type/TypeList$Generic;
isAssignableFrom
 (Ljava/lang/Class<*>;)Z
 (Ljava/lang/Class<*>;)Z
isAssignableFrom
 (Lnet/bytebuddy/description/type/TypeDescription;)Z
 (Lnet/bytebuddy/description/type/TypeDescription;)Z
isAssignableTo
 (Ljava/lang/Class<*>;)Z
 (Ljava/lang/Class<*>;)Z
isAssignableTo
 (Lnet/bytebuddy/description/type/TypeDescription;)Z
 (Lnet/bytebuddy/description/type/TypeDescription;)Z
isInHierarchyWith
 (Ljava/lang/Class<*>;)Z
 (Ljava/lang/Class<*>;)Z
isInHierarchyWith
 (Lnet/bytebuddy/description/type/TypeDescription;)Z
 (Lnet/bytebuddy/description/type/TypeDescription;)Z
isNestMateOf
 (Ljava/lang/Class<*>;)Z
 (Ljava/lang/Class<*>;)Z
isNestMateOf
 (Lnet/bytebuddy/description/type/TypeDescription;)Z
 (Lnet/bytebuddy/description/type/TypeDescription;)Z
represents
 (Ljava/lang/reflect/Type;)Z
 (Ljava/lang/reflect/Type;)Z
