class net/bytebuddy/description/method/MethodList$AbstractBase
 <S::Lnet/bytebuddy/description/method/MethodDescription;>
 <S::Lnet/bytebuddy/description/method/MethodDescription;>

super net/bytebuddy/matcher/FilterableList$AbstractBase
 <TS;Lnet/bytebuddy/description/method/MethodList<TS;>;>
 <TS;Lnet/bytebuddy/description/method/MethodList<TS;>;>
super net/bytebuddy/description/method/MethodList
 <TS;>
 <TS;>

asDefined
 ()Lnet/bytebuddy/description/method/MethodList<Lnet/bytebuddy/description/method/MethodDescription$InDefinedShape;>;
 ()L1net/bytebuddy/description/method/MethodList<Lnet/bytebuddy/description/method/MethodDescription$InDefinedShape;>;
asSignatureTokenList
 ()Ljava/util/List<Lnet/bytebuddy/description/method/MethodDescription$SignatureToken;>;
 ()L1java/util/List<Lnet/bytebuddy/description/method/MethodDescription$SignatureToken;>;
asSignatureTokenList
 (Lnet/bytebuddy/matcher/ElementMatcher<-Lnet/bytebuddy/description/type/TypeDescription;>;Lnet/bytebuddy/description/type/TypeDescription;)Ljava/util/List<Lnet/bytebuddy/description/method/MethodDescription$SignatureToken;>;
 (Lnet/bytebuddy/matcher/ElementMatcher<-Lnet/bytebuddy/description/type/TypeDescription;>;Lnet/bytebuddy/description/type/TypeDescription;)L1java/util/List<Lnet/bytebuddy/description/method/MethodDescription$SignatureToken;>;
asTokenList
 (Lnet/bytebuddy/matcher/ElementMatcher<-Lnet/bytebuddy/description/type/TypeDescription;>;)Lnet/bytebuddy/description/ByteCodeElement$Token$TokenList<Lnet/bytebuddy/description/method/MethodDescription$Token;>;
 (Lnet/bytebuddy/matcher/ElementMatcher<-Lnet/bytebuddy/description/type/TypeDescription;>;)L1net/bytebuddy/description/ByteCodeElement$Token$TokenList<Lnet/bytebuddy/description/method/MethodDescription$Token;>;
wrap
 (Ljava/util/List<TS;>;)Lnet/bytebuddy/description/method/MethodList<TS;>;
 (Ljava/util/List<TS;>;)L1net/bytebuddy/description/method/MethodList<TS;>;
