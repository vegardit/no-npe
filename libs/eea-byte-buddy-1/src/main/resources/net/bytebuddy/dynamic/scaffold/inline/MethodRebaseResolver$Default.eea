class net/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver$Default

make
 (Lnet/bytebuddy/description/type/TypeDescription;Ljava/util/Set<+Lnet/bytebuddy/description/method/MethodDescription$SignatureToken;>;Lnet/bytebuddy/ClassFileVersion;Lnet/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy;Lnet/bytebuddy/dynamic/scaffold/inline/MethodNameTransformer;)Lnet/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver;
 (Lnet/bytebuddy/description/type/TypeDescription;Ljava/util/Set<+Lnet/bytebuddy/description/method/MethodDescription$SignatureToken;>;Lnet/bytebuddy/ClassFileVersion;Lnet/bytebuddy/implementation/auxiliary/AuxiliaryType$NamingStrategy;Lnet/bytebuddy/dynamic/scaffold/inline/MethodNameTransformer;)L1net/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver;

<init>
 (Ljava/util/Map<Lnet/bytebuddy/description/method/MethodDescription$InDefinedShape;Lnet/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver$Resolution;>;Ljava/util/List<Lnet/bytebuddy/dynamic/DynamicType;>;)V
 (Ljava/util/Map<Lnet/bytebuddy/description/method/MethodDescription$InDefinedShape;Lnet/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver$Resolution;>;Ljava/util/List<Lnet/bytebuddy/dynamic/DynamicType;>;)V
asTokenMap
 ()Ljava/util/Map<Lnet/bytebuddy/description/method/MethodDescription$SignatureToken;Lnet/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver$Resolution;>;
 ()L1java/util/Map<Lnet/bytebuddy/description/method/MethodDescription$SignatureToken;Lnet/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver$Resolution;>;
equals
 (Ljava/lang/Object;)Z
 (L0java/lang/Object;)Z # @Inherited(java.lang.Object)
getAuxiliaryTypes
 ()Ljava/util/List<Lnet/bytebuddy/dynamic/DynamicType;>;
 ()Ljava/util/List<Lnet/bytebuddy/dynamic/DynamicType;>;
resolve
 (Lnet/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lnet/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver$Resolution;
 (Lnet/bytebuddy/description/method/MethodDescription$InDefinedShape;)Lnet/bytebuddy/dynamic/scaffold/inline/MethodRebaseResolver$Resolution;
