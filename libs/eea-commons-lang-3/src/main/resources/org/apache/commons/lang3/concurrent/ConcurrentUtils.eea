class org/apache/commons/lang3/concurrent/ConcurrentUtils

constantFuture
 <T:Ljava/lang/Object;>(TT;)Ljava/util/concurrent/Future<TT;>;
 <T:Ljava/lang/Object;>(TT;)L1java/util/concurrent/Future<TT;>;
createIfAbsent
 <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;
 <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)T0V;
createIfAbsentUnchecked
 <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)TV;
 <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TV;>;)T1V;
extractCause
 (Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentException;
 (Ljava/util/concurrent/ExecutionException;)L0org/apache/commons/lang3/concurrent/ConcurrentException;
extractCauseUnchecked
 (Ljava/util/concurrent/ExecutionException;)Lorg/apache/commons/lang3/concurrent/ConcurrentRuntimeException;
 (Ljava/util/concurrent/ExecutionException;)L0org/apache/commons/lang3/concurrent/ConcurrentRuntimeException;
handleCause
 (Ljava/util/concurrent/ExecutionException;)V
 (Ljava/util/concurrent/ExecutionException;)V
handleCauseUnchecked
 (Ljava/util/concurrent/ExecutionException;)V
 (Ljava/util/concurrent/ExecutionException;)V
initialize
 <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;
 <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)T0T;
initializeUnchecked
 <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;
 <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;)TT;
putIfAbsent
 <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;TV;)TV;
 <K:Ljava/lang/Object;V:Ljava/lang/Object;>(Ljava/util/concurrent/ConcurrentMap<TK;TV;>;TK;TV;)T0V;
