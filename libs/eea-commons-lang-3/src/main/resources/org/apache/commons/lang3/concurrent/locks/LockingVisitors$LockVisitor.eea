class org/apache/commons/lang3/concurrent/locks/LockingVisitors$LockVisitor

<init>
 (TO;TL;Ljava/util/function/Supplier<Ljava/util/concurrent/locks/Lock;>;Ljava/util/function/Supplier<Ljava/util/concurrent/locks/Lock;>;)V
 (TO;TL;Ljava/util/function/Supplier<Ljava/util/concurrent/locks/Lock;>;Ljava/util/function/Supplier<Ljava/util/concurrent/locks/Lock;>;)V
acceptReadLocked
 (Lorg/apache/commons/lang3/function/FailableConsumer<TO;*>;)V
 (Lorg/apache/commons/lang3/function/FailableConsumer<TO;*>;)V
acceptWriteLocked
 (Lorg/apache/commons/lang3/function/FailableConsumer<TO;*>;)V
 (Lorg/apache/commons/lang3/function/FailableConsumer<TO;*>;)V
applyReadLocked
 <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<TO;TT;*>;)TT;
 <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<TO;TT;*>;)TT;
applyWriteLocked
 <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<TO;TT;*>;)TT;
 <T:Ljava/lang/Object;>(Lorg/apache/commons/lang3/function/FailableFunction<TO;TT;*>;)TT;
getLock
 ()TL;
 ()TL;
getObject
 ()TO;
 ()TO;
lockAcceptUnlock
 (Ljava/util/function/Supplier<Ljava/util/concurrent/locks/Lock;>;Lorg/apache/commons/lang3/function/FailableConsumer<TO;*>;)V
 (Ljava/util/function/Supplier<Ljava/util/concurrent/locks/Lock;>;Lorg/apache/commons/lang3/function/FailableConsumer<TO;*>;)V
lockApplyUnlock
 <T:Ljava/lang/Object;>(Ljava/util/function/Supplier<Ljava/util/concurrent/locks/Lock;>;Lorg/apache/commons/lang3/function/FailableFunction<TO;TT;*>;)TT;
 <T:Ljava/lang/Object;>(Ljava/util/function/Supplier<Ljava/util/concurrent/locks/Lock;>;Lorg/apache/commons/lang3/function/FailableFunction<TO;TT;*>;)TT;
